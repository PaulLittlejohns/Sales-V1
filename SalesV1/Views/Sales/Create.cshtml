@model SalesV1.Models.SalesViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create Sale</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => Model.ProductId, Model.ProductList as SelectList, new { @id = "products", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            <span id="productmsg" style="display: none; color:red;">Select a Product</span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => Model.CustomerId, Model.CustomerList as SelectList, new { @id = "customers", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            <span id="customermsg" style="display: none; color:red;">Select a Customer</span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoreId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => Model.StoreId, Model.StoreList as SelectList, new { @id = "stores", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
            <span id="storemsg" style="display: none; color:red;">Select a Store</span>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SaleDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => Model.SaleDate, "dd/MM/yyyy", new { @id = "saledate", @type = "date", @Value = Model.SaleDate.ToString("yyyy-MM-dd")})
            @Html.ValidationMessageFor(model => model.SaleDate, "", new { @class = "text-danger" })
            <span id="datemsg" style="display: none; color:red;">Select a Date</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id ="savebtn" type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

    <div>
        <button type="button" class="btn btn-danger" id="EditProduct" onclick="history.go(-1);">
            Return
        </button>
    </div>

@section scripts{
    <script>
        $("form").submit(function (e) {
            var datevalidate = $("#saledate").val();
            if (datevalidate.length == 0) {
                $("#datemsg").show();
            }
            if ($("#products").val() == "0") {
                $("#productmsg").show();
            };
            if ($("#customers").val() == "0") {
                $("#customermsg").show();                
            };
            if ($("#stores").val() == "0") {
                $("#storemsg").show();  
            };
            if ($("#products").val() == "0" || $("#customers").val() == "0" || $("#stores").val() == "0" || datevalidate == 0) {
                e.preventDefault(e);
            }
        });
    </script>
}
